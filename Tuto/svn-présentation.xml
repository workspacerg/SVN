<?xml version="1.0" encoding="utf-8" ?>
<tutorial xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://leanforge.dev/tutorial https://github.com/HugoPoi/LeanForge/raw/master/xsd/tutotialschema.xsd">
  <meta>
    <software id="maven">
      <name><![CDATA[Subversion]]></name>
      <website href="http://subversion.apache.org"><![CDATA[Apache Subversion]]></website>
    </software>
    <languages>
      <codinglang>java</codinglang>
    </languages>
    <plateforms>linux-ubuntu</plateforms>
    <categories>
      <category>build</category>
    </categories>
    <keywords><![CDATA[subversion,svn,Présentation]]></keywords>
  </meta>
  <content lang="fr-FR">
    <title><![CDATA[Présentation de Subversion]]></title>
    <step name="First Step">
      <substep><![CDATA[
       <h1>Présentation</h1>
      ]]></substep>
      <substep><![CDATA[
        Subversion (en abrégé svn) est un logiciel de gestion de versions. Il a été conçu pour remplacer CVS et s'appuie sur les mêmes concepts de dépôt centralisé et unique. Le principe de fonctionnement est très simple, il est basé sur un système client / serveur "basique".
      ]]></substep>
      <substep><![CDATA[
        Le principe est le suivant :<br>
        <li>le serveur garde en mémoire toutes les versions de tous les fichiers qui ont été utilisés sur lui. Ces fichiers utilisés sont les fichiers que l'on veut versionner ;</li>
        <li>Il n'est pas possible de travailler directement sur les fichiers du serveur. C'est la raison pour laquelle il faut obligatoirement un client dans le système.</li>
        <li>le client, lui, va télécharger les fichiers à jour sur le serveur afin de pouvoir travailler dessus localement. Une fois qu'il aura fini d'apporter ses modifications, il enverra la nouvelle version des fichiers au serveur qui va les stocker pour la personne suivante qui voudrait les utiliser.</li>
      ]]></substep>
      <substep><![CDATA[
        3 configurations possibles :<br>
        <li>Un poste client et serveur</li>
        <li>Plusieurs postes en LAN</li>
        <li>Le serveur et le client sont tous les deux connectés à Internet</li>
      ]]></substep>
    </step>
    <step name="Second Step">
      <substep><![CDATA[
       <h1>Les alternatives</h1>
      ]]></substep>
      <substep><![CDATA[
       L’autre grand nom du versionning se nomme Git. Les serveur les plus connus sont Github et Bitbucket. La principale différence entre les deux environnements est leur architecture respective. En effet, alors que SNV est basé sur une architecture centralisé, Github, lui, copie les fichiers sur chaque machine.
      ]]></substep>
      <substep><![CDATA[
       <h2>Avantages</h2>
      ]]></substep>
      <substep><![CDATA[
       <h2>Inconvénients</h2>
      ]]></substep>

      <substep><![CDATA[
        <h2>Utilitaire</h2>

        Deux types de serveurs subversion sont disponibles actuellement :<br>
        
        <li>svnserve est un serveur léger qui utilise un protocole TCP/IP spécifique. Il est destiné aux petites installations ou lorsqu'un serveur complet Apache ne peut pas être utilisé. Il utilise par défaut une authentification par un fichier contenant des noms d'utilisateurs et leur mot de passe mais peut également être utilisé avec le protocole Simple Authentication and Security Layer (SASL). On peut également utiliser une connexion sécurisée SSH avec svnserve.</li>
        
        <li>Serveur HTTP d'Apache. Dans ce cas les dépôts sont rendus accessibles aux clients via l'installation d'un module WebDAV. L'utilisation du protocole SSL permet de sécuriser la transmission via l'Internet. Dans le cas d'un grand nombre d'utilisateurs, le protocole SSH peut être plus contraignant et moins sécurisé puisqu'il crée des utilisateurs de plein droit sur le serveur hôte. Un des avantages de la solution HTTP d'Apache malgré sa lourdeur d'installation et sa réactivité plus lente que Svnserve est la possibilité de tracer les connexions des clients.</li>
        
      ]]>
      </substep>

      
    </step>
  </content>
</tutorial>
